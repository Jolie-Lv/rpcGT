syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server

    // 3. REQUIRED (Parts 1 & 2): A method to list all files on the server

    // 4. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server

    // 5. REQUIRED (Part 2 only): A method to request a write lock from the server

    // 6. Any other methods you deem necessary to complete the tasks of this assignment


  rpc Fetch (FetchRequest) returns (stream Chunk) {}

  rpc Store (stream Chunk) returns (StoreResponse) {}

  rpc GetStat(GetStatRequest) returns(GetStatResponse){}

  rpc ListAllFiles(ListFilesRequest) returns(ListFilesResponse){}

  rpc RequestWriteLock(WriteLockRequest) returns (WriteLockResponse){}
}

message WriteLockResponse
{
    bool lockAcquired = 1;
}

message WriteLockRequest
{
    string filename = 1;
    int32 clientid = 2;
}

message ListFilesRequest{
}

message ListFilesResponse
{
  repeated ListFileInfo allfileinfo = 1;
}

message ListFileInfo
{
  string filename = 1;
  int64 modifiedtime = 2;
}

message GetStatResponse
{
  int64 filesize = 1;
  int64 modifiedtime = 2;
  int64 creationtime = 3;
}

message GetStatRequest
{
  string filename = 1;
}

message StoreResponse {
  string result = 1;
}

message Chunk {
  bytes content = 1;
}

message FetchRequest {
  string filename = 1;
}

